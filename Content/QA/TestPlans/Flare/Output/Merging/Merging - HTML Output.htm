<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="9" MadCap:lastHeight="2621" MadCap:lastWidth="978" MadCap:conditionTagExpression="exclude[Default.UITestsEditors] " MadCap:fileTags="AuthorFileTagSet.Matthew,Status.Flare V7 Needs Review,Product.Flare">
    <head><title></title>
    </head>
    <body>
        <h2>Merging Compiled HTML&#160;Output</h2>
        <p>This section focuses specifically on merging Output CHMs.&#160; Merging Output CHMs is very similar to merging WebHelp and DotNet Help output, so many of the test cases and processes will seem similar, but they are in fact slightly different.</p>
        <p>Before your master project CHM can be merged with an external CHM, the CHM file for the external project(s) need(s) to be copied to the same location as where the master project is being published. Either you can copy the external project CHM file to it manually, or Flare can do it for you automatically (when you build your output).</p>
        <h3>TOC Editor – Setup</h3>
        <p>Open your Parent project and open the TOC in the Parent project.&#160; Create a TOC entry which will be used to link to the Child project.&#160; View the properties dialog for that TOC entry.</p>
        <h4>TOC Entry Properties dialog / Basic tab</h4>
        <p>
            <img src="../../../../../Resources/Images/UI--TOCNodeProperties--LinkToExternalHelpSystem--Web.png" style="mc-thumbnail: popup;">
            </img>
        </p>
        <p class="bold">Relevant UI Controls</p>
        <ul style="list-style-type: square;">
            <li><span class="bold">Link: </span>Displays the name or path of the CHM to which you are linking. (If you enter the path, Flare will copy the output CHM file to the Master project’s output for you.&#160; If you enter only the filename, you will need to copy the output CHM file into the folder of the Master project Output CHM.&#160; Or, you can set the Publishing Destination of the Slave project to publish the CHM directly to that folder.&#160; See Target Editor – Setup section below).</li>
            <li>
                <p><span class="bold">Select HTML Help...:</span>Selecting this button will invoke the <span class="UI">Link to HTML Help</span> dialog which will let you browse for a chm.</p>
                <p>The process for merging HTML Help outputs has been improved and simplified in V7. There is a new option in the Properties dialog for table of contents (TOC) and browse sequence entries that enable you to find and select a CHM file. You can select a CHM file that you have already brought into your project (perhaps via the external resources feature—see About External Resources), or you can select a CHM file located elsewhere, in which case a copy of it is added to your project.</p>
            </li>
            <li><span class="bold">Enter External Help System… : </span>Selecting this button will invoke the <span class="UI">Link to Help System</span> dialog which will let you browse for a compiled WebHelp or DotNet. (.mcwebhelp and .mchelp) This is covered in greater depth in the <MadCap:xref href="Merging.htm" target="" title="" alt="" class="TitleOnly">Merging</MadCap:xref> test plan.</li>
            <li><span class="bold">Select Link: </span>Opens the dialog appropriate to the current Link selection.&#160; Once a link to a CHM is established as indicated in the screenshot, this button will open the <span class="UI">Link to Help System</span> dialog.</li>
            <li><span class="bold">Open Linked File: </span>Opens the selected External Help System file (if the path is provided in the Link field; if the Link field is only populated with the filename of the Help System, this button should be inactive).</li>
        </ul>
        <h4>Link to Help System dialog - UI</h4>
        <p>
            <img src="../../../../../Resources/Images/TestPlans/Flare/Merging/UI--LinkToHelpSystem.png" alt="" title="" class="properties" />
        </p>
        <div class="SnippetIndent">
            <MadCap:snippetBlock src="../../../../../Resources/Snippets/TestPlans/UI-Tests.flsnp" />
        </div>
        <hr />
        <p class="bold">UI Controls</p>
        <ul style="list-style-type: square;">
            <li><span class="bold">Enter the name of the help system…: </span>Enter the name or full path of the external Help system. You can also use the Browse button to find and select the output for the Help system (.chm for HTML Help, .mchelp for DotNet Help, and .mcwebhelp for Flare WebHelp).</li>
            <li><span class="bold">Browse: </span>Opens a window which lets you browse for an External Help System (*.chm, *.mcwebhelp, or *.mchelp).</li>
        </ul>
        <h4>Appearance in the TOC Editor</h4>
        <p>The TOC entry icon for CHM link is <img src="../../../../../Resources/Images/TestPlans/Flare/Merging/TOCEditor--MergeNode--CHMIcon.png" />.&#160; Hovering over the TOC entry should reveal the path to and/or the filename of the CHM file.</p>
        <p>Example of a TOC link to a CHM using the file’s path:</p>
        <p>
            <img src="../../../../../Resources/Images/TestPlans/Flare/Merging/TOCEditor--MergeNode--CHMPath.png" alt="" title="" />
        </p>
        <p>Example of a TOC link to a CHM using only the filename:</p>
        <p>
            <img src="../../../../../Resources/Images/TestPlans/Flare/Merging/TOCEditor--MergeNode--CHMName.png" alt="" title="" />
        </p>
        <div class="TestCases">
            <p class="TestCases">Test Cases</p>
            <ul style="list-style-type: square;">
                <li>Create a Parent project with HTML&#160;Help set to be the output. Link to an External Help Systems which is not HTML Help.&#160; Generate the Parent project and test that an error is generated in the compiler.</li>
            </ul>
        </div>
        <h3>Publishing/Target Editor – Setup</h3>
        <p>If your Parent project knows the path of all linked CHM files (the link set in the TOC&#160;node's Properties dialog uses the full path and not just the name), the linked CHM&#160;files will automatically be copied to the Parent project’s output when the Parent project is generated.&#160; If this is the case, there is no setup necessary here.</p>
        <hr />
        <p>If your Parent project links only to the CHMs by filename, you will have to manually copy the Child project’s output CHM into the Parent project’s output folder.&#160; Or, you can setup each project to publish accordingly:</p>
        <ol>
            <li>
                <p>Create a Destination in the Parent project and all Child projects. The Directory should be the same in all projects.</p>
                <p>
                    <img src="../../../../../Resources/Images/TestPlans/Flare/Merging/DestinationEditor--Directory.png" alt="" title="" />
                </p>
            </li>
            <li>
                <p>In the Target Editor of the Parent project and each Child project, associate each Target with the Destination.</p>
                <p>
                    <img src="../../../../../Resources/Images/TestPlans/Flare/Merging/TargetEditor--EnablePublish.png" alt="" title="" />
                </p>
            </li>
            <li>Build and publish all output.</li>
        </ol>
        <h3>Imported RoboHelp Baggage Files</h3>
        <p>If you are working with HTML Help and import a RoboHelp project that has been merged with other CHM files, the linked CHM files are placed in a special sub-folder in the Content Explorer (Resources\CHMSupport).</p>
        <p>
            <img src="../../../../../Resources/Images/TestPlans/Flare/Merging/ContentExplorer--CHMSupportFolder.png" alt="" title="" class="properties" />
        </p>
        <div class="SnippetIndent">
            <p class="bold">Test Cases</p>
            <ul>
                <li>"CHMSupport" folder should be blue</li>
                <li>Folder should be created automatically when importing a RH project with a CHM Baggage File</li>
                <li>Manually creating the folder should also generate the blue folder</li>
                <li>CHMs contained in the CHMSupport folder are added to the HTML Output</li>
            </ul>
            <p>&#160;</p>
            <p>Further testing to be done in RH Import Test Plan</p>
        </div>
    </body>
</html>